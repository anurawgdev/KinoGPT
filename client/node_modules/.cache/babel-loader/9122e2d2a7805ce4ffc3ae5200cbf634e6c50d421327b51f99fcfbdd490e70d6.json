{"ast":null,"code":"import React,{useState,useRef,useEffect,useCallback}from'react';import axios from'axios';import styled from'styled-components';import{FaRobot,FaUser,FaPaperPlane,FaFilm,FaSync}from'react-icons/fa';import'./App.css';// Function to get the server URL from the proxy setting or default to port 5000\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const getServerUrl=()=>{// In development, we use the proxy setting from package.json\nif(process.env.NODE_ENV==='development'){return'';// Empty string means use the proxy setting\n}// In production, we need to determine the server URL\nreturn window.location.origin;};const App=()=>{const[messages,setMessages]=useState([]);const[input,setInput]=useState('');const[isLoading,setIsLoading]=useState(false);const[serverStatus,setServerStatus]=useState('checking');// 'checking', 'online', 'offline'\nconst[serverUrl]=useState(getServerUrl());const messagesEndRef=useRef(null);const checkServerStatus=useCallback(async()=>{try{// Try to ping the server\nawait axios.get(`${serverUrl}/api/ping`,{timeout:5000});setServerStatus('online');}catch(error){console.error('Server status check failed:',error);setServerStatus('offline');// Only add the system message if we don't already have one\nif(!messages.some(msg=>msg.isError&&msg.text.includes('server appears to be offline'))){const systemMessage={text:\"The server appears to be offline or not responding. Please check your connection and try again.\",sender:'bot',isError:true};setMessages(prev=>[...prev,systemMessage]);}}},[serverUrl,messages]);// Check server status on load\nuseEffect(()=>{checkServerStatus();// Set up periodic server status checks\nconst intervalId=setInterval(checkServerStatus,30000);// Check every 30 seconds\nreturn()=>clearInterval(intervalId);},[checkServerStatus]);const scrollToBottom=()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:'smooth'});};useEffect(()=>{scrollToBottom();},[messages]);const handleSendMessage=async e=>{e.preventDefault();if(!input.trim())return;const userMessage={text:input,sender:'user'};setMessages(prev=>[...prev,userMessage]);setInput('');setIsLoading(true);try{const response=await axios.post(`${serverUrl}/api/chat`,{message:input},{timeout:60000});const botMessage={text:response.data.reply,sender:'bot'};setMessages(prev=>[...prev,botMessage]);}catch(error){console.error('Error sending message:',error);let errorMessage='Sorry, I encountered an error. Please try again later.';// Check for specific error types\nif(error.response){// The request was made and the server responded with a status code\n// that falls out of the range of 2xx\nif(error.response.data&&error.response.data.error){errorMessage=error.response.data.error;}else if(error.response.status===503){errorMessage='The AI model is currently loading. Please try again in a few moments.';}else if(error.response.status===429){errorMessage='Too many requests. Please wait a moment before trying again.';}}else if(error.request){// The request was made but no response was received\nerrorMessage='Could not connect to the server. Please check your internet connection and try again.';setServerStatus('offline');}else{// Something happened in setting up the request that triggered an Error\nerrorMessage='An unexpected error occurred. Please try again.';}const botErrorMessage={text:errorMessage,sender:'bot',isError:true};setMessages(prev=>[...prev,botErrorMessage]);}finally{setIsLoading(false);}};const retryConnection=async()=>{setServerStatus('checking');await checkServerStatus();};return/*#__PURE__*/_jsxs(AppContainer,{children:[/*#__PURE__*/_jsxs(Header,{children:[/*#__PURE__*/_jsxs(Logo,{children:[/*#__PURE__*/_jsx(FaFilm,{}),/*#__PURE__*/_jsx(\"h1\",{children:\"Movie Chatbot\"})]}),/*#__PURE__*/_jsx(Subtitle,{children:\"Your AI Movie Expert\"}),serverStatus==='offline'&&/*#__PURE__*/_jsxs(ServerStatus,{children:[/*#__PURE__*/_jsx(\"span\",{children:\"Server Offline\"}),/*#__PURE__*/_jsx(RetryButton,{onClick:retryConnection,children:/*#__PURE__*/_jsx(FaSync,{})})]})]}),/*#__PURE__*/_jsxs(ChatContainer,{children:[/*#__PURE__*/_jsxs(MessageList,{children:[/*#__PURE__*/_jsxs(WelcomeMessage,{children:[/*#__PURE__*/_jsx(BotIcon,{children:/*#__PURE__*/_jsx(FaRobot,{})}),/*#__PURE__*/_jsx(MessageContent,{children:/*#__PURE__*/_jsx(\"p\",{children:\"Hello! I'm your movie expert chatbot. Ask me anything about the movies in my database!\"})})]}),messages.map((message,index)=>/*#__PURE__*/_jsxs(Message,{sender:message.sender,children:[message.sender==='bot'?/*#__PURE__*/_jsx(BotIcon,{children:/*#__PURE__*/_jsx(FaRobot,{})}):/*#__PURE__*/_jsx(UserIcon,{children:/*#__PURE__*/_jsx(FaUser,{})}),/*#__PURE__*/_jsx(MessageContent,{isError:message.isError,children:/*#__PURE__*/_jsx(\"p\",{children:message.text})})]},index)),isLoading&&/*#__PURE__*/_jsxs(Message,{sender:\"bot\",children:[/*#__PURE__*/_jsx(BotIcon,{children:/*#__PURE__*/_jsx(FaRobot,{})}),/*#__PURE__*/_jsx(MessageContent,{children:/*#__PURE__*/_jsxs(TypingIndicator,{children:[/*#__PURE__*/_jsx(\"span\",{}),/*#__PURE__*/_jsx(\"span\",{}),/*#__PURE__*/_jsx(\"span\",{})]})})]}),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]}),/*#__PURE__*/_jsxs(InputForm,{onSubmit:handleSendMessage,children:[/*#__PURE__*/_jsx(InputField,{type:\"text\",value:input,onChange:e=>setInput(e.target.value),placeholder:\"Ask about movies...\",disabled:isLoading||serverStatus==='offline'}),/*#__PURE__*/_jsx(SendButton,{type:\"submit\",disabled:isLoading||!input.trim()||serverStatus==='offline',children:/*#__PURE__*/_jsx(FaPaperPlane,{})})]})]})]});};// Styled Components\nconst AppContainer=styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 20px;\n`;const Header=styled.header`\n  text-align: center;\n  margin-bottom: 20px;\n`;const Logo=styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 10px;\n  font-size: 1.5rem;\n  color: #e50914;\n`;const Subtitle=styled.p`\n  color: #aaa;\n  font-size: 1rem;\n`;const ServerStatus=styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 10px;\n  margin-top: 10px;\n  color: #ff6b6b;\n  font-size: 0.9rem;\n`;const RetryButton=styled.button`\n  background: none;\n  border: none;\n  color: #aaa;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 5px;\n  border-radius: 50%;\n  transition: all 0.2s;\n  \n  &:hover {\n    color: #fff;\n    background-color: rgba(255, 255, 255, 0.1);\n  }\n`;const ChatContainer=styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  background-color: #1e1e1e;\n  border-radius: 10px;\n  overflow: hidden;\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.3);\n`;const MessageList=styled.div`\n  flex: 1;\n  overflow-y: auto;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;const Message=styled.div`\n  display: flex;\n  align-items: flex-start;\n  gap: 10px;\n  max-width: 80%;\n  align-self: ${props=>props.sender==='user'?'flex-end':'flex-start'};\n  flex-direction: ${props=>props.sender==='user'?'row-reverse':'row'};\n`;const WelcomeMessage=styled.div`\n  display: flex;\n  align-items: flex-start;\n  gap: 10px;\n  max-width: 80%;\n  margin-bottom: 20px;\n`;const MessageContent=styled.div`\n  background-color: ${props=>{if(props.isError)return'#ff6b6b';return props.sender==='user'?'#e50914':'#2a2a2a';}};\n  padding: 12px 16px;\n  border-radius: 18px;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n  \n  p {\n    margin: 0;\n    line-height: 1.5;\n  }\n`;const BotIcon=styled.div`\n  background-color: #e50914;\n  color: white;\n  width: 36px;\n  height: 36px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-shrink: 0;\n`;const UserIcon=styled.div`\n  background-color: #0070f3;\n  color: white;\n  width: 36px;\n  height: 36px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-shrink: 0;\n`;const InputForm=styled.form`\n  display: flex;\n  padding: 15px;\n  background-color: #2a2a2a;\n  border-top: 1px solid #333;\n`;const InputField=styled.input`\n  flex: 1;\n  padding: 12px 16px;\n  border: none;\n  border-radius: 25px;\n  background-color: #3a3a3a;\n  color: white;\n  font-size: 1rem;\n  outline: none;\n  \n  &:focus {\n    box-shadow: 0 0 0 2px #e50914;\n  }\n  \n  &::placeholder {\n    color: #aaa;\n  }\n  \n  &:disabled {\n    opacity: 0.7;\n    cursor: not-allowed;\n  }\n`;const SendButton=styled.button`\n  background-color: #e50914;\n  color: white;\n  border: none;\n  width: 45px;\n  height: 45px;\n  border-radius: 50%;\n  margin-left: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  transition: background-color 0.2s;\n  \n  &:hover {\n    background-color: #f40612;\n  }\n  \n  &:disabled {\n    background-color: #666;\n    cursor: not-allowed;\n  }\n`;const TypingIndicator=styled.div`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  \n  span {\n    display: inline-block;\n    width: 8px;\n    height: 8px;\n    background-color: #aaa;\n    border-radius: 50%;\n    animation: bounce 1.5s infinite ease-in-out;\n    \n    &:nth-child(1) {\n      animation-delay: 0s;\n    }\n    \n    &:nth-child(2) {\n      animation-delay: 0.2s;\n    }\n    \n    &:nth-child(3) {\n      animation-delay: 0.4s;\n    }\n  }\n  \n  @keyframes bounce {\n    0%, 60%, 100% {\n      transform: translateY(0);\n    }\n    30% {\n      transform: translateY(-5px);\n    }\n  }\n`;export default App;","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","axios","styled","FaRobot","FaUser","FaPaperPlane","FaFilm","FaSync","jsx","_jsx","jsxs","_jsxs","getServerUrl","process","env","NODE_ENV","window","location","origin","App","messages","setMessages","input","setInput","isLoading","setIsLoading","serverStatus","setServerStatus","serverUrl","messagesEndRef","checkServerStatus","get","timeout","error","console","some","msg","isError","text","includes","systemMessage","sender","prev","intervalId","setInterval","clearInterval","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSendMessage","e","preventDefault","trim","userMessage","response","post","message","botMessage","data","reply","errorMessage","status","request","botErrorMessage","retryConnection","AppContainer","children","Header","Logo","Subtitle","ServerStatus","RetryButton","onClick","ChatContainer","MessageList","WelcomeMessage","BotIcon","MessageContent","map","index","Message","UserIcon","TypingIndicator","ref","InputForm","onSubmit","InputField","type","value","onChange","target","placeholder","disabled","SendButton","div","header","p","button","props","form"],"sources":["/Users/anuragsharma/Documents/uengage/ChatBot/client/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport { FaRobot, FaUser, FaPaperPlane, FaFilm, FaSync } from 'react-icons/fa';\nimport './App.css';\n\n// Function to get the server URL from the proxy setting or default to port 5000\nconst getServerUrl = () => {\n  // In development, we use the proxy setting from package.json\n  if (process.env.NODE_ENV === 'development') {\n    return '';  // Empty string means use the proxy setting\n  }\n  \n  // In production, we need to determine the server URL\n  return window.location.origin;\n};\n\nconst App = () => {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [serverStatus, setServerStatus] = useState('checking'); // 'checking', 'online', 'offline'\n  const [serverUrl] = useState(getServerUrl());\n  const messagesEndRef = useRef(null);\n\n  const checkServerStatus = useCallback(async () => {\n    try {\n      // Try to ping the server\n      await axios.get(`${serverUrl}/api/ping`, { timeout: 5000 });\n      setServerStatus('online');\n    } catch (error) {\n      console.error('Server status check failed:', error);\n      setServerStatus('offline');\n      \n      // Only add the system message if we don't already have one\n      if (!messages.some(msg => msg.isError && msg.text.includes('server appears to be offline'))) {\n        const systemMessage = {\n          text: \"The server appears to be offline or not responding. Please check your connection and try again.\",\n          sender: 'bot',\n          isError: true\n        };\n        \n        setMessages(prev => [...prev, systemMessage]);\n      }\n    }\n  }, [serverUrl, messages]);\n\n  // Check server status on load\n  useEffect(() => {\n    checkServerStatus();\n    \n    // Set up periodic server status checks\n    const intervalId = setInterval(checkServerStatus, 30000); // Check every 30 seconds\n    \n    return () => clearInterval(intervalId);\n  }, [checkServerStatus]);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const handleSendMessage = async (e) => {\n    e.preventDefault();\n    \n    if (!input.trim()) return;\n    \n    const userMessage = {\n      text: input,\n      sender: 'user'\n    };\n    \n    setMessages(prev => [...prev, userMessage]);\n    setInput('');\n    setIsLoading(true);\n    \n    try {\n      const response = await axios.post(`${serverUrl}/api/chat`, { message: input }, { timeout: 60000 });\n      \n      const botMessage = {\n        text: response.data.reply,\n        sender: 'bot'\n      };\n      \n      setMessages(prev => [...prev, botMessage]);\n    } catch (error) {\n      console.error('Error sending message:', error);\n      \n      let errorMessage = 'Sorry, I encountered an error. Please try again later.';\n      \n      // Check for specific error types\n      if (error.response) {\n        // The request was made and the server responded with a status code\n        // that falls out of the range of 2xx\n        if (error.response.data && error.response.data.error) {\n          errorMessage = error.response.data.error;\n        } else if (error.response.status === 503) {\n          errorMessage = 'The AI model is currently loading. Please try again in a few moments.';\n        } else if (error.response.status === 429) {\n          errorMessage = 'Too many requests. Please wait a moment before trying again.';\n        }\n      } else if (error.request) {\n        // The request was made but no response was received\n        errorMessage = 'Could not connect to the server. Please check your internet connection and try again.';\n        setServerStatus('offline');\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        errorMessage = 'An unexpected error occurred. Please try again.';\n      }\n      \n      const botErrorMessage = {\n        text: errorMessage,\n        sender: 'bot',\n        isError: true\n      };\n      \n      setMessages(prev => [...prev, botErrorMessage]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const retryConnection = async () => {\n    setServerStatus('checking');\n    await checkServerStatus();\n  };\n\n  return (\n    <AppContainer>\n      <Header>\n        <Logo>\n          <FaFilm />\n          <h1>Movie Chatbot</h1>\n        </Logo>\n        <Subtitle>Your AI Movie Expert</Subtitle>\n        {serverStatus === 'offline' && (\n          <ServerStatus>\n            <span>Server Offline</span>\n            <RetryButton onClick={retryConnection}>\n              <FaSync />\n            </RetryButton>\n          </ServerStatus>\n        )}\n      </Header>\n      \n      <ChatContainer>\n        <MessageList>\n          <WelcomeMessage>\n            <BotIcon><FaRobot /></BotIcon>\n            <MessageContent>\n              <p>Hello! I'm your movie expert chatbot. Ask me anything about the movies in my database!</p>\n            </MessageContent>\n          </WelcomeMessage>\n          \n          {messages.map((message, index) => (\n            <Message key={index} sender={message.sender}>\n              {message.sender === 'bot' ? (\n                <BotIcon><FaRobot /></BotIcon>\n              ) : (\n                <UserIcon><FaUser /></UserIcon>\n              )}\n              <MessageContent isError={message.isError}>\n                <p>{message.text}</p>\n              </MessageContent>\n            </Message>\n          ))}\n          \n          {isLoading && (\n            <Message sender=\"bot\">\n              <BotIcon><FaRobot /></BotIcon>\n              <MessageContent>\n                <TypingIndicator>\n                  <span></span>\n                  <span></span>\n                  <span></span>\n                </TypingIndicator>\n              </MessageContent>\n            </Message>\n          )}\n          \n          <div ref={messagesEndRef} />\n        </MessageList>\n        \n        <InputForm onSubmit={handleSendMessage}>\n          <InputField\n            type=\"text\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            placeholder=\"Ask about movies...\"\n            disabled={isLoading || serverStatus === 'offline'}\n          />\n          <SendButton \n            type=\"submit\" \n            disabled={isLoading || !input.trim() || serverStatus === 'offline'}\n          >\n            <FaPaperPlane />\n          </SendButton>\n        </InputForm>\n      </ChatContainer>\n    </AppContainer>\n  );\n};\n\n// Styled Components\nconst AppContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 20px;\n`;\n\nconst Header = styled.header`\n  text-align: center;\n  margin-bottom: 20px;\n`;\n\nconst Logo = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 10px;\n  font-size: 1.5rem;\n  color: #e50914;\n`;\n\nconst Subtitle = styled.p`\n  color: #aaa;\n  font-size: 1rem;\n`;\n\nconst ServerStatus = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 10px;\n  margin-top: 10px;\n  color: #ff6b6b;\n  font-size: 0.9rem;\n`;\n\nconst RetryButton = styled.button`\n  background: none;\n  border: none;\n  color: #aaa;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 5px;\n  border-radius: 50%;\n  transition: all 0.2s;\n  \n  &:hover {\n    color: #fff;\n    background-color: rgba(255, 255, 255, 0.1);\n  }\n`;\n\nconst ChatContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  background-color: #1e1e1e;\n  border-radius: 10px;\n  overflow: hidden;\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.3);\n`;\n\nconst MessageList = styled.div`\n  flex: 1;\n  overflow-y: auto;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;\n\nconst Message = styled.div`\n  display: flex;\n  align-items: flex-start;\n  gap: 10px;\n  max-width: 80%;\n  align-self: ${props => props.sender === 'user' ? 'flex-end' : 'flex-start'};\n  flex-direction: ${props => props.sender === 'user' ? 'row-reverse' : 'row'};\n`;\n\nconst WelcomeMessage = styled.div`\n  display: flex;\n  align-items: flex-start;\n  gap: 10px;\n  max-width: 80%;\n  margin-bottom: 20px;\n`;\n\nconst MessageContent = styled.div`\n  background-color: ${props => {\n    if (props.isError) return '#ff6b6b';\n    return props.sender === 'user' ? '#e50914' : '#2a2a2a';\n  }};\n  padding: 12px 16px;\n  border-radius: 18px;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n  \n  p {\n    margin: 0;\n    line-height: 1.5;\n  }\n`;\n\nconst BotIcon = styled.div`\n  background-color: #e50914;\n  color: white;\n  width: 36px;\n  height: 36px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-shrink: 0;\n`;\n\nconst UserIcon = styled.div`\n  background-color: #0070f3;\n  color: white;\n  width: 36px;\n  height: 36px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-shrink: 0;\n`;\n\nconst InputForm = styled.form`\n  display: flex;\n  padding: 15px;\n  background-color: #2a2a2a;\n  border-top: 1px solid #333;\n`;\n\nconst InputField = styled.input`\n  flex: 1;\n  padding: 12px 16px;\n  border: none;\n  border-radius: 25px;\n  background-color: #3a3a3a;\n  color: white;\n  font-size: 1rem;\n  outline: none;\n  \n  &:focus {\n    box-shadow: 0 0 0 2px #e50914;\n  }\n  \n  &::placeholder {\n    color: #aaa;\n  }\n  \n  &:disabled {\n    opacity: 0.7;\n    cursor: not-allowed;\n  }\n`;\n\nconst SendButton = styled.button`\n  background-color: #e50914;\n  color: white;\n  border: none;\n  width: 45px;\n  height: 45px;\n  border-radius: 50%;\n  margin-left: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  transition: background-color 0.2s;\n  \n  &:hover {\n    background-color: #f40612;\n  }\n  \n  &:disabled {\n    background-color: #666;\n    cursor: not-allowed;\n  }\n`;\n\nconst TypingIndicator = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  \n  span {\n    display: inline-block;\n    width: 8px;\n    height: 8px;\n    background-color: #aaa;\n    border-radius: 50%;\n    animation: bounce 1.5s infinite ease-in-out;\n    \n    &:nth-child(1) {\n      animation-delay: 0s;\n    }\n    \n    &:nth-child(2) {\n      animation-delay: 0.2s;\n    }\n    \n    &:nth-child(3) {\n      animation-delay: 0.4s;\n    }\n  }\n  \n  @keyframes bounce {\n    0%, 60%, 100% {\n      transform: translateY(0);\n    }\n    30% {\n      transform: translateY(-5px);\n    }\n  }\n`;\n\nexport default App; "],"mappings":"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AACA;AACA;AACA;AACA;AACA,CAAC,CAED,KAAM,CAAAV,SAAS,CAAGpF,MAAM,CAACmG,IAAI;AAC7B;AACA;AACA;AACA;AACA,CAAC,CAED,KAAM,CAAAb,UAAU,CAAGtF,MAAM,CAACoB,KAAK;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAED,KAAM,CAAAyE,UAAU,CAAG7F,MAAM,CAACiG,MAAM;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAED,KAAM,CAAAf,eAAe,CAAGlF,MAAM,CAAC8F,GAAG;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAED,cAAe,CAAA7E,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}